@page "/auth"
@inject NavigationManager NavigationManager

<p>@StatusText</p>

@code {
    private string StatusText { get; set; } = "Authenticating...";

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var code = query["code"];

        if (!string.IsNullOrEmpty(code))
        {
            await ExchangeCodeForToken(code);
        }
        else
        {
            StatusText = "Failed to authenticate.";
        }
    }

    private async Task ExchangeCodeForToken(string code)
    {
        InstagramAuthRequest auth = new InstagramAuthRequest
        {
            ClientId = "440417048755047",
            ClientSecret = "6f3721317ededdbae6ff0437ae0e4892",
            RedirectUri = "https://rcsign.github.io",
            Code = code
        };

        using (HttpClient client = new())
        {
            var response = await client.PostAsJsonAsync("https://rcsign.azurewebsites.net/instagramproxy/access-token", auth);
            var responseContent = await response.Content.ReadAsStringAsync();

            var accessToken = ExtractAccessToken(responseContent);

            StatusText = accessToken;
        }
    }

    private string ExtractAccessToken(string response)
    {
        var jsonDocument = System.Text.Json.JsonDocument.Parse(response);
        return jsonDocument.RootElement.GetProperty("access_token").GetString()!;
    }

    struct InstagramAuthRequest
    {
        public string ClientId { get; set; }
        public string ClientSecret { get; set; }
        public string RedirectUri { get; set; }
        public string Code { get; set; }
    }
}
