@page "/auth"
@inject NavigationManager NavigationManager

<p>@StatusText</p>

@code {
    private string StatusText { get; set; } = "Authenticating...";

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var code = query["code"];

        if (!string.IsNullOrEmpty(code))
        {
            await ExchangeCodeForToken(code);
        }
        else
        {
            StatusText = "Failed to authenticate.";
        }
    }

    private async Task ExchangeCodeForToken(string code)
    {
        var clientId = "440417048755047";
        var clientSecret = "6f3721317ededdbae6ff0437ae0e4892";
        var redirectUri = "https://rcsign.github.io/auth";

        var requestContent = new FormUrlEncodedContent([
            new("client_id", clientId),
            new("client_secret", clientSecret),
            new("grant_type", "authorization_code"),
            new("redirect_uri", redirectUri),
            new("code", code)
        ]);

        using (HttpClient client = new())
        {
            var response = await client.PostAsync("https://api.instagram.com/oauth/access_token", requestContent);
            var responseContent = await response.Content.ReadAsStringAsync();

            var accessToken = ExtractAccessToken(responseContent);

            StatusText = accessToken;
        }
    }

    private string ExtractAccessToken(string response)
    {
        var jsonDocument = System.Text.Json.JsonDocument.Parse(response);
        return jsonDocument.RootElement.GetProperty("access_token").GetString()!;
    }
}
